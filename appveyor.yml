version: 3.0.{build}

image: 
- Visual Studio 2022
- Ubuntu2004
- macOS

dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'

build_script:
- ps: >-
    dotnet --info
    
    if($isWindows)
    {
        # CLI version
        # -----------
        # Publish and package Self Contained Executables        
        dotnet publish SerialDiskCLI/SerialDiskCLI.csproj -r win-x64 -c Release --self-contained true --output ./bin/Release/CLI/SCE/win-x64 /p:PublishTrimmed=true /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true
        dotnet publish SerialDiskCLI/SerialDiskCLI.csproj -r win-x86 -c Release --self-contained true --output ./bin/Release/CLI/SCE/win-x86 /p:PublishTrimmed=true /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true
        
        # Publish and package Framework Dependant Executables        
        dotnet publish SerialDiskCLI/SerialDiskCLI.csproj -r win-x64 -c Release --self-contained false --output ./bin/Release/CLI/FDE/win-x64
        dotnet publish SerialDiskCLI/SerialDiskCLI.csproj -r win-x86 -c Release --self-contained false --output ./bin/Release/CLI/FDE/win-x86
        
        # UI version
        # ----------
        # Publish and package Self Contained Executables        
        dotnet publish SerialDiskUI/SerialDiskUI.csproj -r win-x64 -c Release --self-contained true --output ./bin/Release/UI/SCE/win-x64 /p:PublishTrimmed=true /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true
        dotnet publish SerialDiskUI/SerialDiskUI.csproj -r win-x86 -c Release --self-contained true --output ./bin/Release/UI/SCE/win-x86 /p:PublishTrimmed=true /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true
        
        # Publish and package Framework Dependant Executables        
        dotnet publish SerialDiskUI/SerialDiskUI.csproj -r win-x64 -c Release --self-contained false --output ./bin/Release/UI/FDE/win-x64
        dotnet publish SerialDiskUI/SerialDiskUI.csproj -r win-x86 -c Release --self-contained false --output ./bin/Release/UI/FDE/win-x86
    }

    elseif($isLinux)
    {
        # CLI version
        # -----------    
        # Publish and package Self Contained Executables        
        dotnet publish SerialDiskCLI/SerialDiskCLI.csproj -r linux-x64 -c Release --self-contained true --output ./bin/Release/CLI/SCE/linux-x64 /p:PublishTrimmed=true /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true
        dotnet publish SerialDiskCLI/SerialDiskCLI.csproj -r linux-arm64 -c Release --self-contained true --output ./bin/Release/CLI/SCE/linux-arm64 /p:PublishTrimmed=true /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true
        dotnet publish SerialDiskCLI/SerialDiskCLI.csproj -r linux-arm -c Release --self-contained true --output ./bin/Release/CLI/SCE/linux-arm32 /p:PublishTrimmed=true /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true

        # Publish and package Framework Dependant Executables
        dotnet publish SerialDiskCLI/SerialDiskCLI.csproj -r linux-x64 -c Release --self-contained false --output ./bin/Release/CLI/FDE/linux-x64
        dotnet publish SerialDiskCLI/SerialDiskCLI.csproj -r linux-arm64 -c Release --self-contained false --output ./bin/Release/CLI/FDE/linux-arm64
        dotnet publish SerialDiskCLI/SerialDiskCLI.csproj -r linux-arm -c Release --self-contained false --output ./bin/Release/CLI/FDE/linux-arm32
        
        # UI version
        # ----------
        # Publish and package Self Contained Executables        
        dotnet publish SerialDiskUI/SerialDiskUI.csproj -r linux-x64 -c Release --self-contained true --output ./bin/Release/UI/SCE/linux-x64 /p:PublishTrimmed=true /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true
        dotnet publish SerialDiskUI/SerialDiskUI.csproj -r linux-arm64 -c Release --self-contained true --output ./bin/Release/UI/SCE/linux-arm64 /p:PublishTrimmed=true /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true
        dotnet publish SerialDiskUI/SerialDiskUI.csproj -r linux-arm -c Release --self-contained true --output ./bin/Release/UI/SCE/win-x86 /p:PublishTrimmed=true /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true
        
        # Publish and package Framework Dependant Executables        
        dotnet publish SerialDiskUI/SerialDiskUI.csproj -r linux-x64 -c Release --self-contained false --output ./bin/Release/UI/FDE/linux-x64
        dotnet publish SerialDiskUI/SerialDiskUI.csproj -r linux-arm64 -c Release --self-contained false --output ./bin/Release/UI/FDE/linux-arm64
        dotnet publish SerialDiskUI/SerialDiskUI.csproj -r linux-arm -c Release --self-contained false --output ./bin/Release/UI/FDE/linux-arm32      
    }
    
    else
    {    
        # CLI version
        # -----------      
        # Publish and package Self Contained Executables        
        dotnet publish SerialDiskCLI/SerialDiskCLI.csproj -r osx-x64 -c Release --self-contained true --output ./bin/Release/CLI/SCE/macos-x64 /p:PublishTrimmed=true /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true

        # Publish and package Framework Dependant Executables
        dotnet publish SerialDiskCLI/SerialDiskCLI.csproj -r osx-x64 -c Release --self-contained false --output ./bin/Release/CLI/FDE/macos-x64
        
        # UI version
        # ----------  
        # Publish and package Self Contained Executables        
        dotnet publish SerialDiskUI/SerialDiskUI.csproj -r osx-x64 -c Release --self-contained true --output ./bin/Release/UI/SCE/osx-x64 /p:PublishTrimmed=true /p:PublishSingleFile=true /p:EnableCompressionInSingleFile=true
        
        # Publish and package Framework Dependant Executables        
        dotnet publish SerialDiskUI/SerialDiskUI.csproj -r osx-x64 -c Release --self-contained false --output ./bin/Release/UI/FDE/osx-x64
    }

on_success:
- ps: >-
    $versionNo = "3.0"
    
    if($isWindows)
    {
        # CLI version
        
        7z a -mx=9 serialdisk_$($versionNo)_cli_sce_win-x64.zip ./bin/Release/CLI/SCE/win-x64/*
        appveyor PushArtifact serialdisk_$($versionNo)_cli_sce_win-x64.zip

        7z a -mx=9 serialdisk_$($versionNo)_cli_sce_win-x86.zip ./bin/Release/CLI/SCE/win-x86/*
        appveyor PushArtifact serialdisk_$($versionNo)_cli_sce_win-x86.zip

        7z a -mx=9 serialdisk_$($versionNo)_cli_fde_win-x64.zip ./bin/Release/CLI/FDE/win-x64/*
        appveyor PushArtifact serialdisk_$($versionNo)_cli_fde_win-x64.zip

        7z a -mx=9 serialdisk_$($versionNo)_cli_fde_win-x86.zip ./bin/Release/CLI/FDE/win-x86/*
        appveyor PushArtifact serialdisk_$($versionNo)_cli_fde_win-x86.zip
        
        # UI Version

        7z a -mx=9 serialdisk_$($versionNo)_ui_sce_win-x64.zip ./bin/Release/UI/SCE/win-x64/*
        appveyor PushArtifact serialdisk_$($versionNo)_ui_sce_win-x64.zip

        7z a -mx=9 serialdisk_$($versionNo)_ui_sce_win-x86.zip ./bin/Release/UI/SCE/win-x86/*
        appveyor PushArtifact serialdisk_$($versionNo)_ui_sce_win-x86.zip

        7z a -mx=9 serialdisk_$($versionNo)_ui_fde_win-x64.zip ./bin/Release/UI/FDE/win-x64/*
        appveyor PushArtifact serialdisk_$($versionNo)_ui_fde_win-x64.zip

        7z a -mx=9 serialdisk_$($versionNo)_ui_fde_win-x86.zip ./bin/Release/UI/FDE/win-x86/*
        appveyor PushArtifact serialdisk_$($versionNo)_ui_fde_win-x86.zip        
        
    }
    
    elseif($isLinux)
    {
        # CLI version
        
        tar -czf serialdisk_$($versionNo)_cli_sce_linux-x64.tar.gz -C ./bin/Release/CLI/SCE/linux-x64
        appveyor PushArtifact serialdisk_$($versionNo)_cli_sce_linux-x64.tar.gz

        tar -czf serialdisk_$($versionNo)_cli_sce_linux-arm64.tar.gz -C ./bin/Release/CLI/SCE/linux-arm64
        appveyor PushArtifact serialdisk_$($versionNo)_cli_sce_linux-arm64.tar.gz

        tar -czf serialdisk_$($versionNo)_cli_sce_linux-arm32.tar.gz -C ./bin/Release/CLI/SCE/linux-arm32
        appveyor PushArtifact serialdisk_$($versionNo)_cli_sce_linux-arm32.tar.gz

        tar -czf serialdisk_$($versionNo)_cli_fde_linux-x64.tar.gz -C ./bin/Release/CLI/FDE/linux-x64
        appveyor PushArtifact serialdisk_$($versionNo)_cli_fde_linux-x64.tar.gz

        tar -czf serialdisk_$($versionNo)_cli_fde_linux-arm64.tar.gz -C ./bin/Release/CLI/FDE/linux-arm64
        appveyor PushArtifact serialdisk_$($versionNo)_cli_fde_linux-arm64.tar.gz

        tar -czf serialdisk_$($versionNo)_cli_fde_linux-arm32.tar.gz -C ./bin/Release/CLI/FDE/linux-arm32
        appveyor PushArtifact serialdisk_$($versionNo)_cli_fde_linux-arm32.tar.gz
        
        # UI Version
        
        tar -czf serialdisk_$($versionNo)_ui_sce_linux-x64.tar.gz -C ./bin/Release/UI/SCE/linux-x64
        appveyor PushArtifact serialdisk_$($versionNo)_ui_sce_linux-x64.tar.gz

        tar -czf serialdisk_$($versionNo)_ui_sce_linux-arm64.tar.gz -C ./bin/Release/UI/SCE/linux-arm64
        appveyor PushArtifact serialdisk_$($versionNo)_ui_sce_linux-arm64.tar.gz

        tar -czf serialdisk_$($versionNo)_ui_sce_linux-arm32.tar.gz -C ./bin/Release/UI/SCE/linux-arm32
        appveyor PushArtifact serialdisk_$($versionNo)_ui_sce_linux-arm32.tar.gz

        tar -czf serialdisk_$($versionNo)_ui_fde_linux-x64.tar.gz -C ./bin/Release/UI/FDE/linux-x64
        appveyor PushArtifact serialdisk_$($versionNo)_ui_fde_linux-x64.tar.gz

        tar -czf serialdisk_$($versionNo)_ui_fde_linux-arm64.tar.gz -C ./bin/Release/UI/FDE/linux-arm64
        appveyor PushArtifact serialdisk_$($versionNo)_ui_fde_linux-arm64.tar.gz

        tar -czf serialdisk_$($versionNo)_ui_fde_linux-arm32.tar.gz -C ./bin/Release/UI/FDE/linux-arm32
        appveyor PushArtifact serialdisk_$($versionNo)_ui_fde_linux-arm32.tar.gz        
    }
    
    else
    {
        # CLI version
    
        tar -czf serialdisk_$($versionNo)_cli_sce_macos-x64.tar.gz -C ./bin/Release/CLI/SCE/macos-x64
        appveyor PushArtifact serialdisk_$($versionNo)_cli_sce_macos-x64.tar.gz
        
        tar -czf serialdisk_$($versionNo)_cli_fde_macos-x64.tar.gz -C ./bin/Release/CLI/FDE/macos-x64
        appveyor PushArtifact serialdisk_$($versionNo)_cli_fde_macos-x64.tar.gz      

        # UI Version        
        
        tar -czf serialdisk_$($versionNo)_ui_sce_macos-x64.tar.gz -C ./bin/Release/UI/SCE/macos-x64
        appveyor PushArtifact serialdisk_$($versionNo)_ui_sce_macos-x64.tar.gz
        
        tar -czf serialdisk_$($versionNo)_ui_fde_macos-x64.tar.gz -C ./bin/Release/UI/FDE/macos-x64
        appveyor PushArtifact serialdisk_$($versionNo)_ui_fde_macos-x64.tar.gz              
    }

test_script:
- ps: >-
    dotnet clean
    
    dotnet test --test-adapter-path:. --logger:Appveyor -nodereuse:false

deploy: off
